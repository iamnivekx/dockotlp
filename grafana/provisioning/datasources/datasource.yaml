apiVersion: 1

deleteDatasources:
  - name: Prometheus
  - name: Tempo
  - name: Loki
  # - name: Alertmanager

datasources:
  - name: Prometheus
    type: prometheus
    access: proxy
    orgId: 1
    url: http://prometheus:9090
    basicAuth: false
    isDefault: false
    version: 1
    editable: false

  - name: Tempo
    type: tempo
    access: proxy
    orgId: 1
    url: http://tempo:3200
    basicAuth: false
    isDefault: false
    version: 1
    editable: true
    apiVersion: 1
    uid: tempo
    jsonData:
      tracesToLogsV2:
        # Field with an internal link pointing to a logs data source in Grafana.
        # datasourceUid value must match the uid value of the logs data source.
        datasourceUid: 'loki'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: ['job', 'instance', 'pod', 'namespace', 'app']
        filterByTraceID: false
        filterBySpanID: false
        customQuery: true
        query: 'method="${__span.tags.method}"'
      tracesToMetrics:
        datasourceUid: 'prom'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      serviceMap:
        datasourceUid: 'prometheus'
      nodeGraph:
        enabled: true
      search:
        hide: false
      lokiSearch:
        datasourceUid: 'loki'
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
      spanBar:
        type: 'Tag'
        tag: 'http.path'

  - name: Loki
    type: loki
    access: proxy
    orgId: 1
    url: http://loki:3100
    basicAuth: false
    isDefault: false
    version: 1
    editable: false
    apiVersion: 1
    jsonData:
      derivedFields:
        - datasourceUid: tempo
          matcherRegex: '"trace_id":"([A-Za-z0-9]+)"'
          name: TraceID
          url: $${__value.raw}

  # https://grafana.com/docs/grafana/latest/datasources/alertmanager/
  # - name: Alertmanager
  #   type: alertmanager
  #   url: http://alertmanager:9093
  #   access: proxy
  #   jsonData:
  #     # Valid options for implementation include mimir, cortex and prometheus
  #     implementation: prometheus
  #     # Whether or not Grafana should send alert instances to this Alertmanager
  #     handleGrafanaManagedAlerts: true
  # optionally
  # basicAuth: true
  # basicAuthUser: test_user
  # secureJsonData:
  #   basicAuthPassword: test_password
